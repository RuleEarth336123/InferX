cmake_minimum_required(VERSION 3.16)
project(llama_infer)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")

if (QWEN2_SUPPORT)
  message(STATUS "QWEN2 SUPPORT")
  add_definitions(-DQWEN2_SUPPORT)
endif()

set(CMAKE_CXX_STANDARD 20)
find_package(glog REQUIRED)
find_package(Armadillo REQUIRED)
find_package(BLAS REQUIRED)
find_package(GTest REQUIRED)
find_package(absl REQUIRED)
find_package(re2 REQUIRED)
find_package(nlohmann_json REQUIRED)

set(gtest ${GTEST_LIBRARIES}/libgtest.a)
set(gtest_main ${GTEST_LIBRARIES}/libgtest_main.a)
set(sentencepiece "/usr/local/lib/libsentencepiece.a")

aux_source_directory(src/tensor/ DIR_TENSOR)
aux_source_directory(src/base/ DIR_BASE)
aux_source_directory(src/op/ DIR_OP)
aux_source_directory(src/models/ DIR_MODEL)
aux_source_directory(kernels/cpu DIR_KERNEL)
aux_source_directory(kernels DIR_KERNEL_INTERFACE)
aux_source_directory(src/sampler DIR_SAMPLE)

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib)
add_library(llama SHARED ${DIR_TENSOR} ${DIR_BASE} ${DIR_OP} ${DIR_MODEL} ${DIR_KERNEL} ${DIR_SAMPLE} ${DIR_KERNEL_INTERFACE})
target_link_libraries(llama sentencepiece glog::glog gtest gtest_main pthread)
target_link_libraries(llama ${ARMADILLO_LIBRARIES} ${BLAS_LIBRARIES}) 
target_link_libraries(llama absl::base re2::re2 nlohmann_json::nlohmann_json)

target_include_directories(llama PUBLIC ${GTest_INCLUDE_DIR})
target_include_directories(llama PUBLIC ${glog_INCLUDE_DIR})
target_include_directories(llama PUBLIC ${PROJECT_SOURCE_DIR}/include)
target_include_directories(llama PUBLIC ${PROJECT_SOURCE_DIR}/kernels)
target_include_directories(llama PUBLIC ${Armadillo_INCLUDE_DIR} ${BLAS_INCLUDE_DIRS})


add_executable(llama_infer tests/test_main.cpp tests/test_buffer.cpp) 
target_link_directories(llama_infer PUBLIC ${PROJECT_SOURCE_DIR}/lib)
target_link_libraries(llama_infer llama)
add_subdirectory(tests)
add_subdirectory(server)